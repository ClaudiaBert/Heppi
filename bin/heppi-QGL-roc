#!/usr/local/bin/python

"""
This is a test script to run few Heppi options
"""
#import heppi
from heppi import heppi
heppi.ROOT.gROOT.ProcessLine(".x .root/rootlogon.C")
# heppi.ROOT.gROOT.SetBatch( heppi.ROOT.kTRUE  )

print "-----------------------"
print dir(heppi)
print "-----------------------"


def customize_roc(roc):
    roc.GetYaxis().SetTitleSize(25)
    roc.GetXaxis().SetTitleSize(25)
    roc.GetYaxis().SetTitleOffset (1)
    roc.GetXaxis().SetTitleOffset (1)


# stack = heppi.instack(
#     plotcard  = "./plotcards/vbf_plotcard_data_test.json",
#     sampledir = './data'
# )
stack = heppi.instack(
    plotcard  = './plotcards/vbf_plotcard_80x_ZplusJet.json',
    sampledir = '../data_80x'
)

heppi.ROOT.gROOT.ProcessLine(".x .root/rootlogon.C")

stack.read_plotcard()
stack.book_trees(True)
stack.print_cuts()
cats_eta = [
    ['(abs(jetEta)<2.5)','|#eta| < 2.5'],
    ['(abs(jetEta)>=2.5 && abs(jetEta)<2.75)','2.5 #leq |#eta| < 2.75'],
    ['(abs(jetEta)>=2.75 && abs(jetEta)<3.0)','2.75 #leq |#eta| < 3.0'],
    ['(abs(jetEta)>=3.0)','|#eta| #geq 3.0']
    ]
cats_pt = [
    ['(jetPt>20 && jetPt<=30 )','20 < p_{T} #leq 30 GeV'],
    ['(jetPt>30 && jetPt<=50 )','30 < p_{T} #leq 50 GeV'],
    ['(jetPt>50 && jetPt<=100)','50 < p_{T} #leq 100 GeV']#,
    # '(jetPt>100)'
]
mva_wp = {
    "super-tight" : [
        [ 0.26, -0.34, -0.24,  0.0 ],
        [ 0.62, -0.21, -0.07,  0.3  ],
        [ 0.87,  0.17,  0.25,  0.4 ]#,
        # [-1.00, -1.00, -1.00, -1.00 ]
    ],
    "tight" : [
        [ 0.26, -0.34, -0.24, -0.26],
        [ 0.62, -0.21, -0.07, -0.03],
        [ 0.87,  0.17,  0.25, 0.33 ]#,
        # [-1.00, -1.00, -1.00, -1.00]
    ]
    ,
    "medium": [
        [-0.49, -0.53, -0.44, -0.42],
        [-0.06, -0.42, -0.30, -0.23],
        [ 0.56, -0.10,  0.01,  0.13]#,
        # [-1.00, -1.00, -1.00, -1.00]
    ],
    "loose" :[
        [-0.96, -0.64, -0.56, -0.54],
        [-0.92, -0.56, -0.44, -0.39],
        [-0.77, -0.31, -0.20, -0.03]#,
        # [-1.00, -1.00, -1.00, -1.00]
    ],
    "RMScut" : [
        [1.00, 0.03, 0.03, 0.03],
        [1.00, 0.03, 0.03, 0.03],
        [1.00, 0.03, 0.03, 0.03]
    ]
}
cats = []
wp_cuts = {}
wp_rms  = {}
legend_cut  = []
for pt_bin in cats_pt :
    _cuts_     = mva_wp['tight' ][cats_pt.index(pt_bin)]
    _cuts_rms_ = mva_wp['RMScut'][cats_pt.index(pt_bin)]
    for eta_bin in cats_eta :
        _cut_ = _cuts_     [cats_eta.index(eta_bin)]
        _rms_ = _cuts_rms_ [cats_eta.index(eta_bin)]
        cats.append('('+ eta_bin[0] + '&&'+ pt_bin[0] + ')')
        wp_cuts ['('+ eta_bin[0] + '&&'+ pt_bin[0] + ')'] = _cut_
        wp_rms  ['('+ eta_bin[0] + '&&'+ pt_bin[0] + ')'] = _rms_
        legend_cut.append([eta_bin[1], pt_bin[1]])

print cats
for cat in cats_eta :
    _sig_ = 'quark'
    _bkg_ = 'pileup'
    print 'cat ::', cat, ' -- '

    v1 = 'jet_QGL'
    points = []

    h1_sig =  stack.histogram(variable = stack.variables[v1], type='signal', cut=cat[0], label='_%i'%cats_eta.index(cat))
    h1_bkg =  stack.histogram(variable = stack.variables[v1], type='gluon' , cut=cat[0], label='_%i'%cats_eta.index(cat))

    print "--> :: ",h1_bkg.Integral()
    print "--> :: ",h1_sig.Integral()
    roc1 = heppi.ROOT.TGraph()

    list1 = []
    roc1.SetPoint (0,1,1)
    for ibin in range(0, h1_sig.GetNbinsX()+1):
        beff = h1_bkg.Integral(ibin,h1_sig.GetNbinsX())/float(h1_bkg.Integral())
        seff = h1_sig.Integral(ibin,h1_sig.GetNbinsX())/float(h1_sig.Integral())
        roc1.SetPoint (ibin+1,beff,seff)
        # list1.append([abs(h1_sig.GetBinCenter(ibin)-wp_cuts[cat]), [beff,seff]])
    roc1.SetPoint (h1_sig.GetNbinsX()+2,0,0)


    # opp_1 = min(x for x in list1)
    # p1 = heppi.ROOT.TEllipse(opp_1[1][0],opp_1[1][1],0.01,0.013)
    # p1.SetFillColor(132)
    # p1.SetLineWidth(0)
    # p1.SetLineColor(132)
    # points.append(p1)

    c =  heppi.ROOT.TCanvas("c","c",700,700)
    c.cd()
    legend  = heppi.ROOT.TLegend(0.5, 0.2,0.9,0.4)
    legend.SetTextAlign( 12 )
    legend.SetTextFont ( 43 )
    legend.SetTextSize ( 18 )
    legend.SetLineColor( 0 )
    legend.SetFillColor( 0 )
    legend.SetFillStyle( 0 )
    legend.SetLineColorAlpha(0,0)
    legend.SetShadowColor(0)

    heppi.ROOT.gPad.SetGridx()
    heppi.ROOT.gPad.SetGridy()

    roc1.SetLineColor(132)
    legend.AddEntry( roc1 , "Jet QGL", "l" );

    gr = heppi.ROOT.TMultiGraph()
    gr.SetTitle(";#varepsilon_{%s};#varepsilon_{%s}" % ('pileup','jet'))
    gr.Add(roc1)

    gr.Draw("AL")
    gr.GetYaxis().SetRangeUser(0,1.3)
    gr.GetXaxis().SetRangeUser(0,1)
    customize_roc(gr)
    gr.Draw("AL")
    c.Update()
    legend.Draw()
    heppi.utils.draw_labels( ["CMSSW-80x"] + [cat[1]] )
    line = heppi.ROOT.TLine()
    line.SetLineStyle(7)
    line.SetLineWidth(2)
    line.DrawLine(0,1,1,1)
    line.DrawLine(0,0,1,1)
    label = '_QGL_region_' + str(cats_eta.index(cat))
    #for p in points:
    #    p.Draw()
    c.SaveAs("plots/ROC_"+_sig_+'_'+_bkg_+label+".pdf")
    c.SaveAs("plots/ROC_"+_sig_+'_'+_bkg_+label+".png")
